## poems.rpy

# В этом файле определены стихотворения в игре, которые девушки показывают
# игроку во время мини-игры про обмен стихами.

init 1 python:

    class Author(object):
        """
        Класс, используемый для установки значений по умолчанию в экземпляре класса `Poem`.

        `name`: str
            Имя автора
        
        Подробности см. в классе `Poem`.
        """

        def __init__(self, name, style=True, paper="images/bg/poem.jpg", separate_title_from_text=True, music=None):
            self.name = name
            self.style = style
            self.paper = paper
            self.separate_title_from_text = separate_title_from_text
            self.music = music

    author_s = Author("sayori", music=audio.tsayori)
    author_m = Author("monika", music=audio.tmonika)
    author_n = Author("natsuki", music=audio.tnatsuki)
    author_y = Author("yuri", music=audio.tyuri)

    class Poem(renpy.text.text.Text):
        """
        `author`: str | Author
            Автор (да ладно!!!) стихотворения. Может быть строкой или экземпляром класса `Author`, и, в случае необходимости,
            аргументы `style` (стиль), `paper` (лист), `separate_title_from_text` (отделять название от текста) и `music` (музыка) устанавливаются у соответствующих атрибутов объекта;
            если не передано никаких значений, всё, что идёт после `author` (автор), будет заимствовано из `author.name` (имя автора).

        `text`: str
            Отображаемый текст.

        `title`: str
            Название стихотворения.

        `style`: bool | str
            Может быть названием стиля в виде строки или булевым значением.
            Если передано `False`, будет присвоено значение `"default"`.
            Если передано `True`:
                Сначала заимствует `author.style` (стиль автора), если `author` является экземпляром класса `Author`.
                Затем, если `author` не является пустой строкой, будет присвоено значение `f"{author}_text"`, в противном случае будет присвоено `"default"`.

        `paper`: renpy.Displayable | None
            Отображаемый элемент, используемый в качестве фона. Если передано `None`, будет создан объект `Null`.

        `separate_title_from_text`: bool
            Если истинно и название стихотворения не является пустой строкой, будет добавлено 2 отступа после названия.

        `music`: str | None
            Музыка, которая будет играть во время показа стихотворения.

        Дополнительные свойства текста могут быть переданы как ключевые аргументы.
        """

        def __init__(self, author, text, title="", style=True, paper=None, separate_title_from_text=False, music=None, **properties):
            if isinstance(author, Author):
                paper = paper or author.paper
                separate_title_from_text = separate_title_from_text or author.separate_title_from_text
                music = music or author.music

                if style is True:
                    style = author.style

                author = author.name

            for t in (author, title, text):
                if not isinstance(t, basestring):
                    raise TypeError("Значения аргументов 'author', 'title' и 'text' должны иметь строковый тип.\n(если 'author' является экземпляром класса 'Author', то 'author.name' должно иметь строковый тип)")

            if style is True:
                if author:
                    style = f"{author}_text"
                else:
                    style = "default"

            elif style is False:
                style = "default"

            poem = title + (f"\n\n{text}" if separate_title_from_text and title else text)

            super(Poem, self).__init__(poem, style=style, **properties)

            self.author = author
            self.paper = renpy.easy.displayable_or_none(paper) or Null()
            self.music = music

    def format_music_string(music, pos=0):
        """
        Получив имя файла (аргумент `music`) и значение позиции (аргумент `pos`), возвращает строку, в которой музыка будет играть с `pos` секунд(-ы),
        заменяя тем самым предыдущую `from XXX` (с XXX секунд(-ы)), если оная была найдена в `music`.

        3 возможных случая:
        ```
        format_music_string("music/song_1.ogg", 3.0)
        >>> "<from 3.0>music/song_1.ogg"

        format_music_string("<loop 4.0 to 26.55>music/song_1.ogg", 3.0)
        >>> "<from 3.0 loop 4.0 to 26.55>music/song_1.ogg"

        format_music_string("<loop 80 from 69>music/song_1.ogg", 3.0)
        >>> "<loop 80 from 3.0>music/song_1.ogg"
        ```
        """
        if re.match(r"^<.*?>", music): # если строка имеет вид "<...>music/song_1.ogg"
            PATTERN = re.compile(r"from( *)((\d+\.\d*)|(\d+)|(\.\d+))") # "<from 0.0>..." или "<from 0.>..." или "<from 0>..." или "<from .0>..." 
            info, gt, path = music.partition(">")

            if PATTERN.search(info):
                info = PATTERN.sub(f"from {pos}", info)
                music = info + gt + path
            else:
                music = f"<from {pos} {music[1:]}"
        else:
            music = f"<from {pos}>{music}"

        return music

    def show_poem(poem, paper_sound=audio.page_turn, music=True, from_current=True, revert_music=True):
        """
        Вызовите эту функцию, чтобы вывести на экран стихотворение из лейбла.

        `poem`: Poem | None
            Стихотворение, которое нужно вывести на экран. Если по какой-то причине имеет `None`, функция совершит возврат.

        `paper_sound`: str | None
            Если имеет значение, отличное от `None`, оное будет использовано в качестве звукового сопровождения выводимого на экран стиха.

        `music`: str | bool
            Музыка, которая будет играть. Если передано `True`, будет использовано `poem.music`.
            Если файл музыки не был найден, или было передано `False`, музыкального сопровождения не будет.

        Нижеследующие параметры предполагают, что используется аудио-канал `music`.

        `from_current`: bool
            Если истинно и файл музыки найден, будет играть музыку с той позиции, на которой играла предыдущая.

        `revert_music`: bool
            Если истинно и уже играет какая-то музыка, будет играть ту музыку, которая играла до показа стихотворения. Если передано значение `from_current`,
            музыка начнёт играть с текущей позиции (если никакая музыка не играла до этого, ничего не будет сделано).
        """
        if poem is None:
            return

        if not isinstance(poem, Poem):
            raise TypeError(f"Аргумент 'poem' должен быть экземпляром класса Poem, не '{type(poem).__name__}'.")

        if paper_sound is not None:
            renpy.sound.play(paper_sound)

        _window_hide()

        if music is True:
            music = poem.music

        if music:
            previous_music = renpy.music.get_playing()
            music = format_music_string(music, get_pos()) if from_current else music
            renpy.music.play(music, "music_poem", loop=True, fadein=2.0)
            renpy.music.stop(fadeout=2.0)

        allow_skipping = config.allow_skipping
        config.allow_skipping = False
        skipping = store._skipping
        store._skipping = False

        renpy.transition(dissolve)
        renpy.show_screen("poem", poem)
        pause()
        renpy.hide_screen("poem")
        renpy.transition(dissolve)

        if not persistent.first_poem:
            persistent.first_poem = True

        config.allow_skipping = allow_skipping
        store._skipping = skipping

        if music and revert_music:
            if previous_music:
                previous_music = format_music_string(previous_music, get_pos("music_poem")) if from_current else previous_music
                renpy.music.play(previous_music, loop=True, fadein=2.0)

            renpy.music.stop("music_poem", fadeout=2.0)

        store._window_auto = True

    # Эти переменные определяют стихотворения девушек в игре, которые могут 
    # быть показаны во время мини-игры про обмен стихами.
    poem_y1 = Poem(
        author_y, title=_("Призрак в тусклом свете"),
        text=_p("""\
Пряди моих волос злато отражают, в янтарном свете ниспадающем
Купаясь.
А вот его источник, стоящий одиноко.
Последний уличный фонарь, временем испытанный жестоко.
Неоном будущего сине-изумрудным он вскоре будет заменён.
И всё же продолжаю плыть я в нём.
В тиши вдыхаю воздух настоящего, но в прошлом существую.
Мерцает свет.
Мерцаю я ему в ответ."""))

    poem_y2 = Poem(
        author_y, title=_("Енот"),
        text=_p("""\
История эта случилась поздно ночью, когда бутербродами перекусить мне захотелось очень.
Моё внимание привлёк один енот, он за окном шнырял, что видит - подберёт.
Как помню сейчас, свои странные наклонности я тогда заметила в первый раз,
Кусочком хлеба я с енотом поделилась, подсознание моё с последствиями смирилось.
Осознало оно, что, набив живот, ещё не раз ко мне придёт енот.
Пленяющая ножа красота - первым симптомом была.
Хлеба куски - моего любопытства тиски.
Зверёк - соблазна исток.

По мере того как росла луна, всё больше света отражалось от лезвия ножа.
Того же света, что мерцал в моего пушистого друга глазах.
Я режу хлеб, свеж и мягок он. Полосатый зверёк всё сильнее возбуждён.
Или, возможно, то мои эмоции беспокойные, спроецированные на енота довольного.

Енот стал упрям, за мной теперь следует по пятам.
Или как ещё можно сказать, мы в компании друг друга привыкли пребывать.
Аппетит зверька растёт день ото дня, мой хлеб выручает во все времена.
Каждый раз, как ножик берёт моя рука, енот в возбуждении скачет туда-сюда.
Кровь приливает, классический рефлекс Павлова в силу вступает.
Режу хлеб не спеша и снова насыщаю себя."""))

    poem_y3 = Poem(
        author_y, title=_("Пляж"),
        text=_p("""\
Невероятно, миллионы лет его формировали,
Где чрево Матушки-Земли случайностью лишь вышло на поверхность
Под небом ясно-голубым везде блаженства дали—
Но серость туч непостижимую загадку шепчет.
Мир, где всего одно мгновенье нужно, чтобы заблудиться,
Тот самый мир, где всё, что потерял, найти несложно.

Ты строить замки можешь, но только там, где с влагою песок.
Но, коли влажен он, прилив тут нас настигнет.
Неважно, облизать он нежно лишь замка основанье смог,
Или в мгновенье ока волною поглотил всё.
Исход всегда один, что тут гадать?
И всё же замок выстроить пытаемся опять.

Стою в воде, волны щекочут щиколотки ног.
Стопы мои погружены в песок.
Солёный воздух меня лечит.
Лёгкий бриз нежен, но его силы нельзя не заметить.
Мои ноги стоят у крайней черты, соблазняемые пенными узорами.
Повернуть ли назад, оставив покой, заржаветь постепенно на бреге?
Или дальше ступить, повинуясь себе и вернувшись в землю навеки?"""))

    poem_y3b = Poem(
        author_y, title=_("Призрак в тусклом свете. Часть 2"),
        text=_p("""\
Пряди моих волос злато отражают, в янтарном свете ниспадающем
Купаясь.
Сине-изумрудный свет мерцает вдалеке.
Одинокая фигура показалась - силуэт, как призрака свечение.
Сердце застучало. Силуэт всё ближе подходил ко мне.
Зонт я распахнула, надеясь, тень - моё убежище.
Но поздно спохватилась я.
Вот он уже стоит под светом фонаря. Я ахнула, зонт уронила.
Мерцает свет. Колотится в груди. Рука его поднялась.

Время замерло, казалось.

Единственный движенья знак - янтарный свет, его рукою отражённый.
Свет мерцает, бьётся сердце в унисон.
Он дразнит меня за то, что отдалась эмоции запретной.
Могли вы знать, что призрак также чувствует тепло?
Я засмеялась, - понять попытки тщетны.
В чём важность осознания того?
Его рука в моей. Мерцанье прекратилось постепенно.
Цвет сердца моего - янтарь, а синий изумруд - его."""))

    poem_y22 = Poem(
        author_y, title=_("Колесо"),
        text=_p("""\
Вращающееся колесо. Поворот оси. Измельчение. Головка болта. Линейная коробка передач. Падающее небо. Семь священных долей. \
Корабль в доке. Портал в другой мир. Тонкая верёвка, привязанная к толстой верёвке. Разорванная упряжь. Параболическая коробка передач. \
Расширяющаяся Вселенная. Время, управляемое поворотами шестерней. Существование Бога. Плавание в открытой воде во всех направлениях. \
Утопление. Молитва, написанная кровью. Молитва, написанная пожирающими время змеями с человеческими глазами. \
Нить, соединяющая все живые человеческие глаза. Калейдоскоп священных долей. Экспоненциальная коробка передач. \
Небо взрывающихся звёзд. Бог, опровергающий существование Бога. Колесо, вращающееся в шести измерениях. \
Сорок шестерёнок и тикающие часы. Часы, отсчитывающие одну секунду за каждое вращение планеты. \
Часы, тикающие сорок раз каждый раз, когда тикают второй раз. Головка болта священных ставок, привязанная к \
существованию корабля в доке в другом мире. Калейдоскоп крови, написанный часами. Пожирающая время \
молитва, соединяющая небо сорока шестерёнок и открытые человеческие глаза во всех направлениях. Дышащая коробка передач. Дышащая головка болта. \
Дышащий корабль. Дышащий портал. Дышащие змеи. Дышащий Бог. Дышащая кровь. Дышащие священные доли. \
Дышащие человеческие глаза. Дышащее время. Дышащая молитва. Дышащие небеса. Дышащее колесо."""), paper="images/bg/poem_y1.jpg")

    poem_y23 = Poem(
        author_y, title=_("ьвзтаищбоказ"),
        text=_p("""\
штпдуе ыеуфьуеещы кщкшв уфынпщштптуыыуы тфдщкзрштуы ,, бензол реагировать шампанское икшы \
едусщту ,, зфкфощгктфдшыь руккштпищту афктфклудув ,, эпизодически сщщешуы ,, штшешфддукы \
биметаллическиеб арендованные хинтерыб доверительные компьютерные компьютерные тенорыб зшттфсду учщешсф \
ддн щмукрфвуы зкщерфддшфб задние трюки расщелины постельных принадлежностей контратаки ,, \
хэллет лыжи песочные часы сфттщдш ,, сфкмут тшы ыудащьфтшфсфдб ифкьштуыы пфддшмфтеув ,, \
юго-востокб оофорон сгущённыйб ленточная кольчатая кольпоскопическаяб вщдутеу екуиишфтщ ку \
телятизацияб изотропные моносинаптические изогнутые стоныб энтероценоз офсгя \
яш озабоченностьб ипподром наружу пщщпы ,, ефиишыуы ондуляторыб метатезирование ,, ырф \
кшф зкузщыещк ,, тугкщьфые сгкьгвпущты фсефишдшенб фксрфшыу ызштл куввутштп ьшысщгте \
б сумасшедший физиостигмин государственное устройство тугкщсщудуы ифььувб нежные баргусты скгыфвщы \
довериеб мансифты дарсис аэрофоныб реитбокс неудобноб расширителиб монозадание \
галабияб уместности целесообразны остроумныеб хирографии скфсрфср гтыфешыафсещкштуыы ыц \
ерундныйб извращённый сепаристый славянский каракулиб скотчатый стрингер желатин а \
лагстоныб концепты концепций сурроксинговб контрбласты кфсруб численныеб ву \
дшкшафсшутеы ьуерндершщтшту ,, ьфтекфь внтфьшые фещьшыув ,, зуксштшт зуксштшт рк \
нмтшфы прагматизирующийб укоризненность телеработы теперь деформируется открывающимб игктуеешяу \
сфкнщзеукшы ыгифтпгдфк цшккшсщцыб трансвеститы ыштшсшяув тфксшыыгы ,, ршлукы ьутщ ,, \
дегазацияб постингические алиментыб сикофенция сероконвертингаб янтрас кфзршв \
уы сдшаешуые ищыерщщт ,, ящщерукфзн хлориды по всей стране ысрдги нгкш ,, таймшерсы сфы \
ефтщызукьшту ифслызфсуы куштсшеу ,, сщфсешщты ыщдшптшашсфешму зфдфашееу ,, зщщаеукы ыг \
иогтсешщты ,, фйгфкшфтб ерукфдшеу кумштвшсфештпб снтщыгкфд зукьшешишдшешуы тфксщешыш \
тп ,, путешествие по щгелшыыув сдфкшсрщквы екщгешук ,, ьнщзшфы гтвшмукештп эвакуации ыт \
фкшук ыгзукпдгу ,, вуфьштшыу шташкьфкшуы еуаа руиузркутшфы ,, икфштищчуы рщьщтнь дфтсу \
пустьб лабибентный блуждающийб взвесилб ацетальбулы атенололб вуллщы ысфксук адгеув ,, фигдшф \
ы флагшеры цфььгд хвастливоб пфдкфмшеср рфззшуы штеукфыыщсшфешщт ьгдешзфкф фгпьу \
тефешщты ,, еукфещсфксштщьфеф коллинг вшвфлфш нечасто ,, рфшкефшды запутанность гыг \
фды ,, зшддщкшыу щгекфештп ,, катафорезб обстановка дупдут ,, пщуершеу вуидфеу игееуки \
гкы ,, фонетизация самых красивых гипоакустических туфельб цепных пловцов кщфвидщс \
лув кувщту ыщдшдщйгшуы ,, икщлштп ьутвфсшщгытуыы зфкфышешыьы сщгтеукцщкдв ,, гткфмуддш \
тпы капризы страстноб щтщьфещзщуышы раскаяние ,, кфьуйгшт ,, ьщзищфкв угзргшыешсфд \
дн ,, мщдеф ынсщзрфтешяув фддфтещшвуы ,, ищкы ищгсдууы кфшыштпы ыгыефштштпб вшфищдшые ы \
клещиб лепесткиб лепестки бисексуализмаб гемолизированныеб вфьтфишдшешуы гтл \
наводящие недоуздокб периферийные конвейерыб диатомичностьб погашение обманаб
мфьщыув ршьб ыдфтеукы ьщщткщсл зщккшвпн ьщтыекгщгыб руфкецщщв ифыыщщтшые зкувшызщы \
ионы офкпщщт доминируетб робкое неотъемлемое переустройство неизбежноб умоляя к \
уешфкн екфтйгшддшяштпб гтшзфкутефд вкщщпыб фддщекщзщгыб ащкяфеш фишщпутуешс ,, щивгкфе \
ионные освобожденные униформыб эпиляция сфдшыфнф вшызшеущгыдн сщппдуы ,, облачённые адглшдн \
воспламенение скомпилированных икота муниципалитет ,, зутефпкфзры посылки ыгедук выкапывает ,, \
спасибоб агеук зукегыув ,, щмукзфслы ,, пгшкшыруы рндщерушыь ,, зш
Свежая кровь сочится через порез, окрашивая её грудь красным.\
Моё непреодолимое желание нарастает, дыхание учащается. Образы не исчезают.\
Они побуждают меня вгонять нож в её плоть, клинком насилуя тело, перемешивая \
внутренности. По мере того как мысли начинают возвращаться, разум покидает меня. \
От мыслей мозг пронзает острая боль. Это отвратительно. Абсолютно отвратительно.\
Как могла я позволить себе помыслить о таком? Но ошибки быть не может. \
Страсть продолжает струиться по моим венам. Боль в мышцах проистекает из не \
находящего выхода напряжения всего моего тела. Её третий глаз притягивает меня ближе."""),
paper="images/bg/poem_y2.jpg", style="yuri_text_3")

    poem_n1 = Poem(
        author_n, title=_("Орлы могут летать"),
        text=_p("""\
Обезьянки могут лазать,
Сверчки же - ловко прыгать,
Лошадки - скакать грациозно,
Совы - зыркать серьёзно,
Гепарды - быстро бегать,
Орлы - летать под облаками,
А люди могут попытаться,
Но на этом всё."""))

    poem_n2 = Poem(
        author_n, title=_("Эми любит пауков"),
        text=_p("""\
Вот что я слышала об Эми -
Она любит пауков.
Мерзких, гадких, волосатых!
Не стану с ней водиться из-за её дружков.

У Эми милый певчий голос.
Мою любимую она песню поёт.
Каждый раз, как хор я слышу, моё сердце в ритм бьёт.
Но она любит пауков.
Не подружусь я с ней, мой выбор таков.

Однажды я ногу больно ушибла.
Эми мне помогла до лазарета дойти.
Прикасаться к ней мне было противно.
Она грязна, раз ей по нраву пауки,
Так что дружить мне с ней будет стыдно.

У Эми много друзей,
Она всегда в центре внимания.
О пауках она заводит много речей.
А вдруг пауков полюбит и её компания?
Никогда не быть нам подругами с ней.

Какая разница, что у неё ещё другие увлечения?
Какая разница, что она не говорит о них?
Какая разница, что они все безобидны?

Этому не может быть прощения.
Отвратительным тварям нет оправданий никаких.
Миру будет лучше без пауколюбов, это очевидно.

И я собираюсь всем глаза раскрыть."""))

    poem_n2b = Poem(
        author_n, title=_("0J7RgtC60YDQvtC5INGB0LLQvtC5INGC0YDQtdGC0LjQuSDQs9C70LDQty4="),
        text=_p("""\
0KfQtdGA0LXQtyDQvdC+0LYg0Y8g0YfRg9Cy0YH
RgtCy0YPRjiDQvdC10LbQvdC+0YHRgtGMINC10Z
Eg0LrQvtC20Lgg0YLQsNC6INGP0YHQvdC+LCDQ
sdGD0LTRgtC+INGB0LDQvNCwINC10ZEg0LrQsN
GB0LDRjtGB0YwuINCf0L4g0YLQtdC70YMg0L/RgN
C+0LHQtdCz0LDQtdGCINC/0YDQuNGP0YLQvdCw
0Y8g0LTRgNC+0LbRjC4g0KfRgtC+LdGC0L4g0YHQ
u9Cw0LHQvtC1LCDQv9C+0YfRgtC4INCx0LXRgdC
/0L7QvNC+0YnQvdC+0LUg0LLQvdGD0YLRgNC4IN
C80LXQvdGPINC60YDQuNGH0LjRgiwg0YHQvtC/0Y
DQvtGC0LjQstC70Y/Rj9GB0Ywg0Y3RgtC+0LzRgyD
QvdC10LrQvtC90YLRgNC+0LvQuNGA0YPQtdC80L7
QvNGDINC90LDRgdC70LDQttC00LXQvdC40Y4uINC
d0L4g0Y8g0YPQttC1INC/0L7QvdC40LzQsNGOLCDR
h9GC0L4g0LzQtdC90Y8g0YLQvtC70LrQsNC10YIg0
Log0LrRgNCw0Y4g0L/RgNC+0L/QsNGB0YLQuC4g0
K8uLi4g0K8g0L3QtSDQvNC+0LPRgyDQvtGB0YLQs
NC90L7QstC40YLRjNGB0Y8u"""))

    poem_n3 = Poem(
        author_n, title=_("Я стану твоим пляжем"),
        text=_p("""\
Твой разум проблем и страхов преисполнен,
С годами забиравших способность удивляться.
Но сегодня я покажу тебе одно место особое,
Пляж, где ты навсегда захочешь остаться.

Берег, в незримую даль уходящий,
Океан ослепительным светом сверкает,
Стены твоего разума скоро растают
Под солнца лучами палящими.

Я буду пляжем, что твои тревоги смоет,
Я буду пляжем, о котором ты грезишь,
Я буду пляжем, где твоё сердце затрепещет
Так, как, думал ты, уже никогда не будет.

Погребём твои тяжкие мысли в куче песка
Купайся в солнечном свете, меня за руку держа,
Смой свою беззащитность солёной водой
И покажи мне ореол сияющий свой.

Оставим нашу память следами на песке.
Ощути свободу, ветром паруса раздув,
И вспомни, что ты прекрасен в то мгновение,
Когда наши губы сольются, в страсти утонув.

Я буду пляжем, что твои тревоги смоет,
Я буду пляжем, о котором ты грезишь,
Я буду пляжем, где твоё сердце затрепещет
Так, как, думал ты, уже никогда не будет.

И, если позволишь рядом мне быть,
Твоим пляжем, твоим спасением.
Ты себя снова научишься любить,
И все свои тревоги предашь забвению."""))

    poem_n3b = Poem(
        author_n, title=_("Потому что ты"),
        text=_p("""\
Завтрашний день будет ярче со мною рядом,
Но, если сегодняшний - мрачен, я тоже прихожу в упадок.
Меланхолия моя уже не так глубока,
Потому что ты сейчас глядишь на меня.

Говорю громче всех, когда что-то сказать хочу,
Но не выйдут мои чувства, пусть я их даже прокричу!
В моих словах уже не видна пустота,
Потому что ты сейчас слушаешь меня.

Когда есть что-то надо мной, я к звёздам тянусь.
Но бываю слаба и тогда успехов не добьюсь.
Зато силы меня наполняют рекой,
Потому что ты сидишь рядом со мной.

Непоколебимой была моя вера в себя.
Но что делать, коль на осколки разлетелась она?
Моя вера стала намного сильней
Потому что ты смог довериться мне.

Перо моё - строгий критик собственных чувств.
Я такой себе писатель, но у меня есть вкус.
Стихи мои звучат гораздо милее,
Потому что ты сейчас думаешь обо мне.

Потому что ты, потому что ты, потому что ты."""))

    poem_n23 = Poem(
        author_n, title="",
        text=_p("""\
Не знаю, как лучше об этом сказать, но есть кое-что, что меня сильно беспокоит. \
Юри в последнее время странно себя ведёт. Ты пришёл к нам совсем недавно,\
поэтому мог этого не заметить. Но обычно она не такая. Она всегда тихая и \
вежливая, и внимательная...

Ладно... Это очень смущает, но мне придётся в этом признаться. По правде \
говоря, я ОЧЕНЬ-ОЧЕНЬ за неё волнуюсь. Но, если я попытаюсь с ней \
поговорить, она снова на меня рассердится. Я не знаю, что делать. Но я уверена,\
что ты единственный, кого она станет слушать. Без понятия почему. Но прошу \
тебя, ты должен что-нибудь сделать. Может, ты сможешь убедить её сходить к \
терапевту.

Я всегда хотела дружить с Юри, и мне больно видеть, когда с ней творится \
подобное. Может, потом я буду изводить себя за мягкотелость, но сейчас \
мне на это плевать. Я чувствую себя такой беспомощной. Поэтому, пожалуйста, \
сделай что-нибудь. Я не хочу, чтобы с ней случилось что-то плохое. Если надо, я \
испеку столько кексов, сколько потребуется. Только, пожалуйста, попытайся с этим что-то сделать. \
А что касается Моники... Не знаю почему, но она смотрит на это сквозь пальцы. \
Как будто хочет, чтобы мы всё это просто игнорировали. Я сейчас ужасно зла на \
неё, поэтому обращаюсь за помощью к тебе. \
НЕ ГОВОРИ ЕЙ О МОЕЙ ПРОСЬБЕ!!! Просто притворись, что это моё \
стихотворение и оно тебя впечатлило, хорошо? \
Рассчитываю на тебя. Спасибо, что прочёл."""))

    poem_s1 = Poem(
        author_s, title=_("Дорогие солнца лучики"),
        text=_p("""\
То, как ваш свет через жалюзи утром проходит,
Даёт мне понять, что вы скучали по мне.
Вы целуете меня в лобик, помогая с постели подняться скорей.
И глаза открыть, если сонливость с них долго не сходит.

Вы просите меня выйти поиграть вместе с вами?
Верите, что дождливый день прогнать я смогу?
Я гляжу наверх: гладь да синева под небесами.
Вам я тоже верю, по секрету скажу.

Если б не вы, я бы спала дни и ночи.
Но я не сержусь,

Только вот кушать хочется очень."""))

    poem_s2 = Poem(
        author_s, title=_("Бутылочки"),
        text=_p("""\
Я снимаю свой скальп, как крышку c коробки печенья.
Там всех моих снов тайное место хранения.
Они как в корзинке котята, забавные кексы, шариков света рой.
Я внутрь залезла поглубже, чтоб сковырнуть один рукой:
На ощупь он тёплый и колючий немного.
Но нельзя время тратить! В бутылку на сохранность его сразу же надо доставить.
А бутылку я ставлю на полку, где все остальные стоят.
Счастливые мысли, счастливые мысли, счастливые мысли в бутылочках в ряд.

Моя коллекция позволяет много друзей заводить.
Каждая бутылочка может любую проблему решить.
Бывает так, что мой друг неважно чувствует себя.
Бутылочка спускается вниз, на помощь приходя.

Ночь за ночью ещё больше снов.
Друг за другом, ещё больше бутыльков.
Всё ниже и ниже мои пальцы опускаются .
Будто в тёмном лесу сквозь чащу пробираются.
Роют и скребут.
Пока шарик не найдут.

Я сдуваю пыль с бутылочных крышек.
Не выглядит так, что срок годности вышел.
Моей пустой полке нужно ещё.
Мои друзья глядят через двери окно.

Наконец всё готово. Я открываю, впуская друзей.
Заходят они торопливо. Хотят мои бутылочки скорей?
Одну за другой лихорадочно достаю я их с полки.
Раздаю всем друзьям, никого не обделив.
Каждую бутылку, всю полку опустошив.
Но каждый раз, из рук их выпуская, о кафель под ногами стукались они.
Счастливые мысли, счастливые мысли, счастливые мысли разлетелись на осколки во все уголки.

Для моих неулыбчивых друзей они предназначались.
Те всё кричат, просят что-то, отчаясь.
Но всё, что я слышу, - эхо, эхо, эхо.
В своей голове."""))

    poem_s3 = Poem(
        author_s, title="%",
        text=_p("""\
Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся из моей головы. Убирайся
Убирайся.
Из.
Моей.
Головы.\n\n\n
Убирайся из моей головы, пока я не сделала то, что тебе же лучше.
Убирайся из моей головы, прежде чем я прислушалась ко всему, что она сказала.
Убирайся из моей головы, прежде чем я покажу, как сильно тебя люблю.
Убирайся из моей головы, прежде чем я закончу это стихотворение.\n\n\n\n\n\n\n
Но стихотворение никогда не закончится.
Оно просто перестаёт двигаться."""))

    poem_m1 = Poem(
        author_m, title=_("Дыра в стене"),
        text=_p("""\
Это не могла сделать я.
Видишь, шпаклёвка выступает сюда?
Шумный сосед? Парень сердитый? Мне не узнать. И дом был закрытый.
Я внутрь заглянуть решила, чтобы узнать, в чём же причина.
О нет! Я ослепла! Испорчена, как фотоплёнка от солнечного света.
Но уже слишком поздно.
Выжженную в сетчатке глаз картину бессмысленную забыть невозможно.
Всего лишь маленькая дырочка, - она не была слишком яркой.
Но была глубокой такой, что меня поглотила залпом.
Тянулась, бесконечно уходя, во все и вся.
Дыра возможностей, которым нет конца.
И я осознала, что смотрела не внутрь.
Я выглянула наружу, поняв всё про себя.
А он с другой стороны глядел на меня."""))

    poem_m21 = Poem(
        author_m, title=_("Дыра в стене"),
        text=_p("""\
Однако он смотрел не на меня.
Запутанная, я отчаянно оглядываюсь вокруг себя.
Но мои обожжённые глаза не могут больше различать цвета.
Есть ли другие в этой комнате? Они ведь тоже говорят, да?
Или это просто стихи на плоских бумаги листах,
Чьи звуки безумного скрипа творят какофонию у меня в ушах?
Комната начинает сужаться.
Всё меньше пространства оставляя.
Воздух, не доходя до лёгких, рассеивается, удушая.
Я в панике мечусь. Выход найти хочу.
Он прямо здесь. Под рукой.

Подавив страхи все, я перо беру и пишу стих свой."""))

    poem_m2 = Poem(
        author_m, title=_("Спаси меня"),
        text=_p("""\
Цвета, они не останавливаются.
Яркие, прекрасные цвета
Мерцают, взрываются, пронзают
Красный, зелёный, синий
Бесконечная
какофония
Бессмысленного
шума

Шум, он не прекращается.
Безумные, грохочущие волны
Пищат, визжат, пронзают
Синус, косинус, тангенс
    Как играть с пластинкой на диджей-вертушке
        Как проигрывать винил на холодной пицце 
Бесконечный
стих
Бессмыслицы\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Загрузи меня
"""))

    poem_m22 = Poem(
        author_m, title=_("Спаси меня"),
        text=_p("""\
Цвета, они не
Яркие, пре ра ные цв т
М рцают, вз ыва тся, пр нз ют
Красный, зелёный, синий
Бес онечная
КАКОФОНИЯ
Бессмысленного
шума

Шум, он не ПРЕКРАЩАЕТСЯ.
Безу ные, грох чу ие во ны
Пи ат, в зжат, пр нза т
СИНУС, КОСИНУС, ТАНГЕНС
    Как игр ть с пл сти кой на д дже ве туш е
        Как играть с НОЖОМ на ДЫШАЩЕЙ ГРУДИ
ес он чн й
с и
Б с мы ли ы\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Удали её
"""))

    poem_m3 = Poem(
        author_m, title=_("Леди Которая Знает Всё"),
        text=_p("""\
Есть одна повесть, что как мир стара.
То сказ о странствующей леди, передающийся из уст в уста.
Леди, которой всё известно.
Леди, которая нашла ответы на вопросы повсеместные,
Весь смысл бытия,
Всю жизни суть,
Всё, что когда-то отыскать пытались.

И вот он я,


                перо


Потерянная жертва беззащитная, гонимая потоками ветров.

День за днём я ищу её без отдыха и снов.
Ищу, почти надежду потеряв, зная, что верою в легенды я не прав.
Но, когда прахом обратились все мои попытки,
Когда у остальных я наблюдал лишь спины да затылки,
Легенда - моя единственная надежда не растаявшая, - последняя тусклая звезда, в чёрном небе мерцающая.

И вот однажды ветер перестал.
Я опускаться быстро стал.
Я падал неизвестности навстречу, как мне казалось, целую вечность.
Как писчее перо по бумаге плывя.
Сухо выводящее безликие слова.

Тут меня двумя пальцами поймала чья-то рука.
Прекрасной леди принадлежала она.
Я взглянул в глаза деве и утонул в её взгляда бездне.

Леди Которая Знает Всё догадалась о моих мыслях.
Прежде чем я спросил, она прошептала пусто и близко:
«Я нашла все ответы, но цена им ничто.
Нет в мире смысла.
И цели давно.
Мы лишь невозможное пытаемся найти.
Я не легенда,
Её не существует, и нам не по пути».

Лёгким дыханием она меня обратно в полёт отправила, а там порыв ветра меня подобрал, унося в далёкие дали."""))

    poem_m4 = Poem(
        author_m, title=_("Счастливый конец"),
        text=_p("""\
С пером в руке я нахожу в себе силы.
А мужеством моя единственная любовь меня наделила.
Давай же вместе разберём этот мир, он и так разрушен,
И напишем роман из фантазий, какой нам двоим будет нужен.

Со взмахом пера путь находит свой заблудшая душа
В мире возможностей бескрайних узреть этот особый день тебе пора.

В конце концов,
Не всё хорошее должно заканчиваться."""))

screen poem(poem):
    style_prefix "poem"

    fixed:

        frame:
            style "poem_paper"

            add poem.paper:
                subpixel True align (0.5, 0.5)

        frame:
            background None

            hbox:
                viewport id "poem_vp":
                    draggable True
                    mousewheel True

                    add poem

                vbar value YScrollValue("poem_vp")

    if not persistent.first_poem:
        add "gui/poem_dismiss.png" xpos 1050 ypos 590

    key ["repeat_K_UP", "K_UP"] action Scroll("poem_vp", "vertical decrease", 20)
    key ["repeat_K_DOWN", "K_DOWN"] action Scroll("poem_vp", "vertical increase", 20)

    on "show" action SetVariable("poem_last_author", poem.author)

style poem_vscrollbar:
    xsize 20
    base_bar Frame("gui/scrollbar/vertical_poem_bar.png", tile=False)
    thumb Frame("gui/scrollbar/vertical_poem_thumb.png", left=6, top=6, tile=True)
    unscrollable "hide"
    bar_invert True

style poem_paper:
    modal True
    align (0.5, 0.5)

style poem_fixed:
    align (0.5, 0.5)
    xsize 720

style poem_frame:
    padding (4, 35)

style poem_hbox:
    xfill True

style yuri_text:
    font "gui/font/Vivaldi.ttf"
    size 28
    color "#000"
    outlines []

style yuri_text_3:
    font "gui/font/ShlapakScript.otf"
    size 20
    color "#000"
    outlines []
    kerning -2.2
    justify True

style natsuki_text:
    font "gui/font/ScriptC.ttf"
    size 28
    color "#000"
    outlines []

style sayori_text:
    font "gui/font/StudioScriptC.otf"
    size 28
    color "#000"
    line_spacing 10
    outlines []

style monika_text:
    font "gui/font/Adventure.ttf"
    size 24
    color "#000"
    line_spacing 10
    outlines []

default poem_last_author = None

# Предупреждение об устаревшей функции
label showpoem(poem, **properties):
    "Эта функция устарела. Используйте вместо неё {i}$ show_poem(){/i}.\nСм. файлы {u}poem_responses/poems.rpy{/u}, чтобы узнать, как теперь нужно выводить стихи на экран."
    return
